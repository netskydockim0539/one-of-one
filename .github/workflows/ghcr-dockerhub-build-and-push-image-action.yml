name: Build and Push Docker Image to GHCR and Docker Hub

on:
  workflow_dispatch:   # ðŸ‘ˆ allows manual runs from the Actions tab

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: newdocvhh65hvwbjvj87hchf42j768vjht542bj84bjbitanetskey0539
      IMAGE_TAG: 001-of-one
      GHCR_REGISTRY: ghcr.io
      DOCKERHUB_REGISTRY: docker.io
      MULTI_ARCH: false     # ðŸ”§ Set to true to enable multi-arch builds
      USE_ALT_GHCR: false   # ðŸ”§ Set to true to push to another GHCR account/org
      ALT_GHCR_NAMESPACE: otheruser # ðŸ”§ Replace with target account/org
      USE_DOCKERHUB: false   # ðŸ”§ Set to false to skip Docker Hub login/push
      USE_GHCR: true        # ðŸ”§ Set to false to skip GHCR login/push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Default GHCR login (repo owner)
      - name: Log in to GHCR (default)
        if: env.USE_GHCR == 'true' && env.USE_ALT_GHCR == 'false'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MY_GHCR_TOKEN }}

      # Alternate GHCR login (other account/org)
      - name: Log in to GHCR (other account)
        if: env.USE_GHCR == 'true' && env.USE_ALT_GHCR == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ env.ALT_GHCR_NAMESPACE }}
          password: ${{ secrets.GHCR_PAT }} # PAT from other account/org

      # Docker Hub login (optional)
      - name: Log in to Docker Hub
        if: env.USE_DOCKERHUB == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push (Single Arch)
        if: env.MULTI_ARCH == 'false'
        run: |
          # Build tag list
          TAG_ARGS=""
          if [ "${{ env.USE_GHCR }}" = "true" ]; then
            if [ "${{ env.USE_ALT_GHCR }}" = "true" ]; then
              GHCR_IMAGE="${{ env.GHCR_REGISTRY }}/${{ env.ALT_GHCR_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            else
              GHCR_IMAGE="${{ env.GHCR_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            fi
            TAG_ARGS="$TAG_ARGS -t $GHCR_IMAGE"
          fi

          if [ "${{ env.USE_DOCKERHUB }}" = "true" ]; then
            DOCKERHUB_IMAGE="${{ env.DOCKERHUB_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            TAG_ARGS="$TAG_ARGS -t $DOCKERHUB_IMAGE"
          fi

          # Build
          docker build $TAG_ARGS .

          # Push
          if [ "${{ env.USE_GHCR }}" = "true" ]; then
            docker push "$GHCR_IMAGE"
          fi
          if [ "${{ env.USE_DOCKERHUB }}" = "true" ]; then
            docker push "$DOCKERHUB_IMAGE"
          fi

      - name: Build and Push (Multi Arch)
        if: env.MULTI_ARCH == 'true'
        run: |
          TAG_ARGS=""
          if [ "${{ env.USE_GHCR }}" = "true" ]; then
            if [ "${{ env.USE_ALT_GHCR }}" = "true" ]; then
              GHCR_IMAGE="${{ env.GHCR_REGISTRY }}/${{ env.ALT_GHCR_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            else
              GHCR_IMAGE="${{ env.GHCR_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            fi
            TAG_ARGS="$TAG_ARGS --tag $GHCR_IMAGE"
          fi

          if [ "${{ env.USE_DOCKERHUB }}" = "true" ]; then
            DOCKERHUB_IMAGE="${{ env.DOCKERHUB_REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            TAG_ARGS="$TAG_ARGS --tag $DOCKERHUB_IMAGE"
          fi

          docker buildx build --platform linux/amd64,linux/arm64 \
            $TAG_ARGS \
            --push .
